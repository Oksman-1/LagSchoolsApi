// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repository;

#nullable disable

namespace LagSchoolsApi.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20240225103327_modified_LandArea_column")]
    partial class modified_LandArea_column
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entities.Models.Class", b =>
                {
                    b.Property<int>("ClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClassId"));

                    b.Property<int?>("ClassDesignation")
                        .HasColumnType("int");

                    b.Property<string>("ClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ClassSize")
                        .HasColumnType("float");

                    b.Property<string>("HeadClassTeacherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfArms")
                        .HasColumnType("int");

                    b.Property<int>("SchoolId")
                        .HasColumnType("int");

                    b.HasKey("ClassId");

                    b.HasIndex("SchoolId");

                    b.ToTable("Classes");

                    b.HasData(
                        new
                        {
                            ClassId = 1,
                            ClassDesignation = 1,
                            ClassName = "JSS1",
                            ClassSize = 231.108,
                            HeadClassTeacherName = "Mr Ifeanyi Eboigbe",
                            NumberOfArms = 5,
                            SchoolId = 1
                        },
                        new
                        {
                            ClassId = 2,
                            ClassDesignation = 3,
                            ClassName = "JSS3",
                            ClassSize = 231.108,
                            HeadClassTeacherName = "Mrs Dapo Oguniyi",
                            NumberOfArms = 6,
                            SchoolId = 1
                        },
                        new
                        {
                            ClassId = 3,
                            ClassDesignation = 4,
                            ClassName = "SS1",
                            ClassSize = 231.108,
                            HeadClassTeacherName = "Mr Felix Okafor",
                            NumberOfArms = 6,
                            SchoolId = 1
                        });
                });

            modelBuilder.Entity("Entities.Models.School", b =>
                {
                    b.Property<int>("SchoolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SchoolId"));

                    b.Property<DateTime?>("DateOpened")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateWAECApproved")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("LandArea")
                        .HasColumnType("float")
                        .HasColumnName("LandArea(Sq.km)");

                    b.Property<int>("NumberSchoolBus")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SchoolAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SchoolAreaCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SchoolBus")
                        .HasColumnType("bit");

                    b.Property<string>("SchoolDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SchoolLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SchoolName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SchoolType")
                        .HasColumnType("int");

                    b.Property<int?>("SecurityLevel")
                        .HasColumnType("int");

                    b.Property<string>("SummarySchoolFacilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("WAECApproved")
                        .HasColumnType("bit");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SchoolId");

                    b.ToTable("Schools");

                    b.HasData(
                        new
                        {
                            SchoolId = 1,
                            DateOpened = new DateTime(1988, 2, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateWAECApproved = new DateTime(1990, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "vinefields_sch@gmail.com",
                            LandArea = 2310.3449999999998,
                            NumberSchoolBus = 6,
                            PhoneNumber = "016403300",
                            SchoolAddress = "21, Sinari Daramijo, Victoria Island, Lagos Nigeria",
                            SchoolAreaCode = "VI/03",
                            SchoolBus = false,
                            SchoolDescription = "Vinefield School is an advanced educational institution sited in Victoria Island renowned for delivering qualitative and sound educational program in a conducive environment.",
                            SchoolLocation = "Victoria Island",
                            SchoolName = "Vinefield School",
                            SchoolType = 3,
                            SecurityLevel = 1,
                            SummarySchoolFacilities = "Library,Gymnasium,Swimming Pool,laboratories,School Hall,Hostels",
                            WAECApproved = true,
                            Website = "https://www.vinefield.com/"
                        },
                        new
                        {
                            SchoolId = 2,
                            DateOpened = new DateTime(1998, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateWAECApproved = new DateTime(2001, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "white_dove@gmail.com",
                            LandArea = 1310.345,
                            NumberSchoolBus = 2,
                            PhoneNumber = "015412680",
                            SchoolAddress = "The White Dove Drive, Off Monastery Road, By New Road Bus Stop, Km 47 Lekki-Epe Expressway, Lekki- Ajah, Lagos Nigeria",
                            SchoolAreaCode = "LA/07",
                            SchoolBus = false,
                            SchoolDescription = "White Dove High School is an educational institution providing outstanding all-round education of international standard while encouraging leadership qualities such as high moral standards, truthfulness, determination, hard-work, diligence and integrity.",
                            SchoolLocation = "Lekki Ajah",
                            SchoolName = "White Dove High School",
                            SchoolType = 3,
                            SecurityLevel = 3,
                            SummarySchoolFacilities = "Library,laboratories,School Hall,Hostels",
                            WAECApproved = true,
                            Website = "https://www.whitedove.com/"
                        },
                        new
                        {
                            SchoolId = 3,
                            DateOpened = new DateTime(1983, 10, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateWAECApproved = new DateTime(1985, 8, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "wisdomgate01@gmail.com",
                            LandArea = 1762.2090000000001,
                            NumberSchoolBus = 4,
                            PhoneNumber = "010025680",
                            SchoolAddress = "4-6 Odegbami Street, Off Adeniyi Jones Avenue, Ikeja, Lagos Nigeria",
                            SchoolAreaCode = "IKJ/02",
                            SchoolBus = false,
                            SchoolDescription = "Wisdom Gate High School provides professional secondary educational services in lkeja.",
                            SchoolLocation = "Ikeja",
                            SchoolName = "Wisdom Gate High School",
                            SchoolType = 1,
                            SecurityLevel = 2,
                            SummarySchoolFacilities = "Library,laboratories,School Hall",
                            WAECApproved = true,
                            Website = "https://www.wisdom_gate.com/"
                        });
                });

            modelBuilder.Entity("Entities.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<string>("ClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ClubAffiliation")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateOfAdmission")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpectedDateOfGraduation")
                        .HasColumnType("datetime2")
                        .HasColumnName("ExpectedDateofGrad");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Height")
                        .HasColumnType("float")
                        .HasColumnName("Height(cm)");

                    b.Property<string>("LGA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MedicalCondition")
                        .HasColumnType("int");

                    b.Property<string>("NationalIdentityNumber")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NationalIdentityNo");

                    b.Property<string>("Nationality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentsPhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ParentPhoneNo");

                    b.Property<int>("SchoolId")
                        .HasColumnType("int");

                    b.Property<int?>("Sex")
                        .HasColumnType("int");

                    b.Property<string>("StateOfOrigin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentRegistrationNumber")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("StudentRegNo");

                    b.Property<int?>("StudentType")
                        .HasColumnType("int");

                    b.Property<string>("VirtualNationalIdentityNumber")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("VNationalIdentityNo");

                    b.Property<double?>("Weight")
                        .HasColumnType("float")
                        .HasColumnName("Weight(kg)");

                    b.HasKey("StudentId");

                    b.HasIndex("ClassId");

                    b.HasIndex("SchoolId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("Entities.Models.Class", b =>
                {
                    b.HasOne("Entities.Models.School", "School")
                        .WithMany("Classes")
                        .HasForeignKey("SchoolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("School");
                });

            modelBuilder.Entity("Entities.Models.Student", b =>
                {
                    b.HasOne("Entities.Models.Class", "Class")
                        .WithMany("Students")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Models.School", "School")
                        .WithMany("Students")
                        .HasForeignKey("SchoolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("School");
                });

            modelBuilder.Entity("Entities.Models.Class", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("Entities.Models.School", b =>
                {
                    b.Navigation("Classes");

                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
